spring:
#  main:
#    banner-mode: "console"
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    #&zeroDateTimeBehavior=convertToNull&useSSL=false;&useSSL=true&serverTimezone=America/New_York:对于像种子这种奇怪的数据就需要加上
    url: jdbc:mysql://localhost:3306/spring_security?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    pagehelper:
      helperDialect: com.github.pagehelper.dialect.helper.MySqlDialect
      offsetAsPageNum: true
#  jpa:
#      show-sql: true
#      hibernate:
#        ddl-auto: update
  profiles:
    #启用开发环境配置
    active: development

---
# token 加密密钥
#token.secret=secret
# token 过期时间，以秒为单位，604800 是 一星期
#token.expiration=604800
token:
  expiration: 604800
  secret: secret
  header: xAuthToken



logging:
#  config: classpath:logback.xml
server:
  session:
    timeout: 1800
---
#redis配置
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
#spring.redis.host=127.0.0.1
# Redis服务器连接端口
#spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0
spring:
  redis:
    database: 0
    port: 6379
    pool:
      max-idle: 8
      min-idle: 0
      max-active: 8
      max-wait: -1
    host: 127.0.0.1
    timeout: 1000
---
#以下是开发环境配置
spring:
  profiles: development
  thymeleaf:
    cache: false
    prefix: classpath:/templates
    suffix: .html
    mode: LEGACYHTML5
    encoding: UTF-8
    content-type: text/html
server:
  port: 8080

---
#以下是生产环境配置
spring:
  profiles: production
  thymeleaf:
    cache: true
    prefix: classpath:/templates
    suffix: .html
    mode: LEGACYHTML5
    encoding: UTF-8
    content-type: text/html
server:
  port: 80

